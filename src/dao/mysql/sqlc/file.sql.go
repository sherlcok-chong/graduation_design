// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: file.sql

package db

import (
	"context"
)

const createFile = `-- name: CreateFile :exec
insert into file (filename, file_key, url, userid)
values (?, ?, ?, ?)
`

type CreateFileParams struct {
	Filename string `json:"filename"`
	FileKey  string `json:"file_key"`
	Url      string `json:"url"`
	Userid   int64  `json:"userid"`
}

func (q *Queries) CreateFile(ctx context.Context, arg CreateFileParams) error {
	_, err := q.db.ExecContext(ctx, createFile,
		arg.Filename,
		arg.FileKey,
		arg.Url,
		arg.Userid,
	)
	return err
}

const deleteFileByID = `-- name: DeleteFileByID :exec
delete from file where id = ?
`

func (q *Queries) DeleteFileByID(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteFileByID, id)
	return err
}

const getFileByID = `-- name: GetFileByID :one
select url
from file
where id = ?
`

func (q *Queries) GetFileByID(ctx context.Context, id int64) (string, error) {
	row := q.db.QueryRowContext(ctx, getFileByID, id)
	var url string
	err := row.Scan(&url)
	return url, err
}

const getKeyByID = `-- name: GetKeyByID :one
select file_key
from file
where id = ?
`

func (q *Queries) GetKeyByID(ctx context.Context, id int64) (string, error) {
	row := q.db.QueryRowContext(ctx, getKeyByID, id)
	var file_key string
	err := row.Scan(&file_key)
	return file_key, err
}

const getLastFileID = `-- name: GetLastFileID :one
SELECT LAST_INSERT_ID()
`

func (q *Queries) GetLastFileID(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, getLastFileID)
	var last_insert_id int64
	err := row.Scan(&last_insert_id)
	return last_insert_id, err
}

const getUserAvatar = `-- name: GetUserAvatar :one
select url
from file
where userid = ?
  and filename = ?
`

type GetUserAvatarParams struct {
	Userid   int64  `json:"userid"`
	Filename string `json:"filename"`
}

func (q *Queries) GetUserAvatar(ctx context.Context, arg GetUserAvatarParams) (string, error) {
	row := q.db.QueryRowContext(ctx, getUserAvatar, arg.Userid, arg.Filename)
	var url string
	err := row.Scan(&url)
	return url, err
}
